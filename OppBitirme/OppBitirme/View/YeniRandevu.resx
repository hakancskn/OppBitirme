<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>